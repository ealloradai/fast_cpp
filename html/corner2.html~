<html>
 <head>
    <STYLE type="text/css">
    <!--
      #container1 { position: absolute; top: 50px; left: 50px;}
      #container2 { position: absolute; top: 50px; left: 50px;}
      #container3 { position: absolute; top: 50px; left: 400px;}
    -->
    </STYLE>
  </head>
  <script src="/incl/zxml.js"></script>
  <script language="javascript">
  var dirx = 1;
  var diry = 1;
  var spdx = setRand();
  var spdy = setRand();
  var imgLeftInt;
  var imgTopInt;
  var imgHeight;
  var imgWidth;
  var winWidth;
  var winHeight;
  var t;
  var ctx;
  var canvas;

  function startStr(on) 
  {
      prova();
  }

  function clr_ctx() 
  {
      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  }

  function drawCorner(x,y) 
  {
      ctx.fillStyle = "rgb(255,0,0)";
      ctx.fillRect(x, y, 1, 1);

  //     ctx.strokeStyle = "rgb(0,255,0)""
  //     ctx.beginPath();
  //     var radius         = 3;                    // Arc radius
  //     var startAngle     = 0;                     // Starting point on circle
  //     var endAngle       = Math.PI*2;		// End point on circle
  //     ctx.arc(x,y,radius,startAngle,endAngle, true);
  //     ctx.stroke();
  }

  function run()
  {
	  canvas = document.getElementById("Canvas");
	  ctx = canvas.getContext("2d");
  }

  function setRand() {
      randnum= Math.floor(Math.random()*40)+2;
      return randnum;
  }

  function computeWin(){
      if(document.body.clientWidth) {
	  this.windWidth=document.body.clientWidth;
	  this.windHeight=document.body.clientHeight;
      } else {
	  this.windWidth = window.innerWidth;
	  this.windHeight=document.innerHeight;
      }
  return this;
  }
  function get_corners_from_app()
  {
    var response = sendAction("/local/fastcpp/corners.cgi", "get");
    var x = 0;
    var y = 0;

    if (response && response.indexOf(",") > 0) {
      var coord_pairs = response.split(";");
      var coords = new Array();
      clr_ctx();
      for (var i = 0; i < coord_pairs.length; i++)
      {
	coords[i] = coord_pairs[i].split(",");

	x = parseInt(coords[i][0], 10);
	y = parseInt(coords[i][1], 10);
	
	drawCorner(x, y);
      }
    }
  }
  function prova() 
  {    
     var xhr; 
          try {  xhr = new XMLHttpRequest();     }
          catch (e3) {  xhr = false;   }
        
    xhr.onreadystatechange  = function()
    { 
         if(xhr.readyState  == 3)
         {
// 	      window.alert("4");
              if(xhr.status  == 200) 
               {
// 		window.alert("200");
// 	      var response = xhr.responseText; 
	      handlePartialResponse(xhr);
	
	  }
        }
    };
   xhr.open("GET", "/local/fastcpp/corners.cgi",  true); 
   xhr.send(null); 
  }  
    var index = 0;
    var buffer = '';
    var DELIMITER = ';';
    var EOF = 'EOF';
    
    function handlePartialResponse(request) {
      var x = 0;
      var y = 0;
//       window.alert("Partial");
      var i = request.responseText.lastIndexOf(DELIMITER);
      if (i> index) {
// 	window.alert("i> index");
	i += DELIMITER.length;
	var newChunk = request.responseText.substr(index, (i - index));
	buffer += newChunk;
	if (buffer && buffer.indexOf(",") > 0) {
		var coord_pairs = buffer.split(";");
		var coords = new Array();
		
// 		for (var j = 0; j < coord_pairs.length; j++)
// 		{
		  coords[0] = coord_pairs[0].split(",");

		  x = parseInt(coords[0][0], 10);	
		  y = parseInt(coords[0][1], 10);
		  
		  drawCorner(x, y);
// 		}
	    }
      
	else if(buffer && buffer.indexOf(EOF) > 0)
	{
	    clr_ctx();
	}

	index = i;
	flushBuffer();
      }
    }
    function flushBuffer() {
      
      buffer = '';
    }
  function prova2() 
  {    
     var xhr; 
          try {  xhr = new XMLHttpRequest();     }
          catch (e3) {  xhr = false;   }
        
    xhr.onreadystatechange  = function()
    { 
         if(xhr.readyState  == 4)
         {
              if(xhr.status  == 200) 
               {
	      var x = 0;
	      var y = 0;
	      var response = xhr.responseText; 
	      if (response && response.indexOf(",") > 0) {
		var coord_pairs = response.split(";");
		var coords = new Array();
		clr_ctx();
		for (var i = 0; i < coord_pairs.length; i++)
		{
		  coords[i] = coord_pairs[i].split(",");

		  x = parseInt(coords[i][0], 10);	
		  y = parseInt(coords[i][1], 10);
		
		  drawCorner(x, y);
		}
	    }
	  }
        }
    }; 

   xhr.open("GET", "/local/fastcpp/corners.cgi",  true); 
   xhr.send(null); 
  }            
  </script>
  <body onload = "run()">
    <div id="container1">
      <img src = "http://150.217.35.115/axis-cgi/mjpg/video.cgi"></img>
    </div>
    <div id="container2">
      <canvas id="Canvas" width="800" height="600"></canvas>
    </div>
<td class="button"><input value="Get corners" class="btnNormal" type="button" onClick="prova()" </td>
  </body>
</html>
